{"ast":null,"code":"var _jsxFileName = \"/Users/hardikkhare/IdeaProjects/firebase-google-drive-clone/src/components/google-drive/AddFileButton.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { faFileUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { storage, database } from \"../../firebase\";\nimport { ROOT_FOLDER } from \"../../hooks/useFolder\";\nimport { v4 as uuidV4 } from \"uuid\";\nimport { ProgressBar, Toast } from \"react-bootstrap\";\nexport default function AddFileButton({\n  currentFolder\n}) {\n  const [uploadingFiles, setUploadingFiles] = useState([]);\n  const {\n    currentUser\n  } = useAuth();\n\n  function handleUpload(e) {\n    const file = e.target.files[0];\n    if (currentFolder == null || file == null) return;\n    /*const id = uuidV4()\n    setUploadingFiles(prevUploadingFiles => [\n      ...prevUploadingFiles,\n      { id: id, name: file.name, progress: 0, error: false },\n    ])*/\n\n    const filePath = currentFolder === ROOT_FOLDER ? `${currentFolder.path.join(\"/\")}/${file.name}` : `${currentFolder.path.join(\"/\")}/${currentFolder.name}/${file.name}`;\n    const uploadTask = storage.ref(`/files/${currentUser.uid}/${filePath}`).put(file);\n    /*uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes\n        setUploadingFiles(prevUploadingFiles => {\n          return prevUploadingFiles.map(uploadFile => {\n            if (uploadFile.id === id) {\n              return { ...uploadFile, progress: progress }\n            }\n             return uploadFile\n          })\n        })\n      },\n      () => {\n        setUploadingFiles(prevUploadingFiles => {\n          return prevUploadingFiles.map(uploadFile => {\n            if (uploadFile.id === id) {\n              return { ...uploadFile, error: true }\n            }\n            return uploadFile\n          })\n        })\n      },\n      () => {\n        setUploadingFiles(prevUploadingFiles => {\n          return prevUploadingFiles.filter(uploadFile => {\n            return uploadFile.id !== id\n          })\n        })\n         uploadTask.snapshot.ref.getDownloadURL().then(url => {\n          database.files\n            .where(\"name\", \"==\", file.name)\n            .where(\"userId\", \"==\", currentUser.uid)\n            .where(\"folderId\", \"==\", currentFolder.id)\n            .get()\n            .then(existingFiles => {\n              const existingFile = existingFiles.docs[0]\n              if (existingFile) {\n                existingFile.ref.update({ url: url })\n              } else {\n                database.files.add({\n                  url: url,\n                  name: file.name,\n                  createdAt: database.getCurrentTimestamp(),\n                  folderId: currentFolder.id,\n                  userId: currentUser.uid,\n                })\n              }\n            })\n        })\n      }\n    )*/\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn btn-outline-success btn-sm m-0 mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faFileUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleUpload,\n    style: {\n      opacity: 0,\n      position: \"absolute\",\n      left: \"-9999px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })), uploadingFiles.length > 0 && ReactDOM.createPortal( /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      bottom: \"1rem\",\n      right: \"1rem\",\n      maxWidth: \"250px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, uploadingFiles.map(file => /*#__PURE__*/React.createElement(Toast, {\n    key: file.id,\n    onClose: () => {\n      setUploadingFiles(prevUploadingFiles => {\n        return prevUploadingFiles.filter(uploadFile => {\n          return uploadFile.id !== file.id;\n        });\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Toast.Header, {\n    closeButton: file.error,\n    className: \"text-truncate w-100 d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, file.name), /*#__PURE__*/React.createElement(Toast.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    animated: !file.error,\n    variant: file.error ? \"danger\" : \"primary\",\n    now: file.error ? 100 : file.progress * 100,\n    label: file.error ? \"Error\" : `${Math.round(file.progress * 100)}%`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }))))), document.body));\n}","map":{"version":3,"sources":["/Users/hardikkhare/IdeaProjects/firebase-google-drive-clone/src/components/google-drive/AddFileButton.js"],"names":["React","useState","ReactDOM","faFileUpload","FontAwesomeIcon","useAuth","storage","database","ROOT_FOLDER","v4","uuidV4","ProgressBar","Toast","AddFileButton","currentFolder","uploadingFiles","setUploadingFiles","currentUser","handleUpload","e","file","target","files","filePath","path","join","name","uploadTask","ref","uid","put","opacity","position","left","length","createPortal","bottom","right","maxWidth","map","id","prevUploadingFiles","filter","uploadFile","error","progress","Math","round","document","body"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { faFileUpload } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useAuth } from \"../../contexts/AuthContext\"\nimport { storage, database } from \"../../firebase\"\nimport { ROOT_FOLDER } from \"../../hooks/useFolder\"\nimport { v4 as uuidV4 } from \"uuid\"\nimport { ProgressBar, Toast } from \"react-bootstrap\"\n\nexport default function AddFileButton({ currentFolder }) {\n  const [uploadingFiles, setUploadingFiles] = useState([])\n  const { currentUser } = useAuth()\n\n  function handleUpload(e) {\n    const file = e.target.files[0]\n    if (currentFolder == null || file == null) return\n\n    /*const id = uuidV4()\n    setUploadingFiles(prevUploadingFiles => [\n      ...prevUploadingFiles,\n      { id: id, name: file.name, progress: 0, error: false },\n    ])*/\n\n    const filePath =\n      currentFolder === ROOT_FOLDER\n        ? `${currentFolder.path.join(\"/\")}/${file.name}`\n        : `${currentFolder.path.join(\"/\")}/${currentFolder.name}/${file.name}`\n\n    const uploadTask = storage\n      .ref(`/files/${currentUser.uid}/${filePath}`)\n      .put(file)\n\n    /*uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes\n        setUploadingFiles(prevUploadingFiles => {\n          return prevUploadingFiles.map(uploadFile => {\n            if (uploadFile.id === id) {\n              return { ...uploadFile, progress: progress }\n            }\n\n            return uploadFile\n          })\n        })\n      },\n      () => {\n        setUploadingFiles(prevUploadingFiles => {\n          return prevUploadingFiles.map(uploadFile => {\n            if (uploadFile.id === id) {\n              return { ...uploadFile, error: true }\n            }\n            return uploadFile\n          })\n        })\n      },\n      () => {\n        setUploadingFiles(prevUploadingFiles => {\n          return prevUploadingFiles.filter(uploadFile => {\n            return uploadFile.id !== id\n          })\n        })\n\n        uploadTask.snapshot.ref.getDownloadURL().then(url => {\n          database.files\n            .where(\"name\", \"==\", file.name)\n            .where(\"userId\", \"==\", currentUser.uid)\n            .where(\"folderId\", \"==\", currentFolder.id)\n            .get()\n            .then(existingFiles => {\n              const existingFile = existingFiles.docs[0]\n              if (existingFile) {\n                existingFile.ref.update({ url: url })\n              } else {\n                database.files.add({\n                  url: url,\n                  name: file.name,\n                  createdAt: database.getCurrentTimestamp(),\n                  folderId: currentFolder.id,\n                  userId: currentUser.uid,\n                })\n              }\n            })\n        })\n      }\n    )*/\n  }\n\n  return (\n    <>\n      <label className=\"btn btn-outline-success btn-sm m-0 mr-2\">\n        <FontAwesomeIcon icon={faFileUpload} />\n        <input\n          type=\"file\"\n          onChange={handleUpload}\n          style={{ opacity: 0, position: \"absolute\", left: \"-9999px\" }}\n        />\n      </label>\n      {uploadingFiles.length > 0 &&\n        ReactDOM.createPortal(\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: \"1rem\",\n              right: \"1rem\",\n              maxWidth: \"250px\",\n            }}\n          >\n            {uploadingFiles.map(file => (\n              <Toast\n                key={file.id}\n                onClose={() => {\n                  setUploadingFiles(prevUploadingFiles => {\n                    return prevUploadingFiles.filter(uploadFile => {\n                      return uploadFile.id !== file.id\n                    })\n                  })\n                }}\n              >\n                <Toast.Header\n                  closeButton={file.error}\n                  className=\"text-truncate w-100 d-block\"\n                >\n                  {file.name}\n                </Toast.Header>\n                <Toast.Body>\n                  <ProgressBar\n                    animated={!file.error}\n                    variant={file.error ? \"danger\" : \"primary\"}\n                    now={file.error ? 100 : file.progress * 100}\n                    label={\n                      file.error\n                        ? \"Error\"\n                        : `${Math.round(file.progress * 100)}%`\n                    }\n                  />\n                </Toast.Body>\n              </Toast>\n            ))}\n          </div>,\n          document.body\n        )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}